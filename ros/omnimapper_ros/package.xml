<package>
  <name>omnimapper_ros</name>
  <version>1.0.0</version>
  <description>omnimapper_ros</description>
  <maintainer email="todo@todo.todo">Alexander J Trevor</maintainer>

  <license>BSD</license>

  <url type="website">http://ros.org/wiki/omnimapper_ros</url>
  <!-- <url type="bugtracker"></url> -->

  <author>Alexander J Trevor</author>

  <!-- Dependencies which this package needs to build itself. -->
  <buildtool_depend>catkin</buildtool_depend>

  <!-- Dependencies needed to compile this package. -->
  <build_depend>roscpp</build_depend>
  <build_depend>tf</build_depend>
  <build_depend>tf2</build_depend>
  <build_depend>visualization_msgs</build_depend>
  <build_depend>interactive_markers</build_depend>
  <build_depend>geometry_msgs</build_depend>
  <build_depend>laser_geometry</build_depend>
  <build_depend>nodelet</build_depend>
  <build_depend>pcl_conversions</build_depend>
  <build_depend>ar_track_alvar_msgs</build_depend>

  <!-- Dependencies needed after this package is compiled. -->
  <run_depend>roscpp</run_depend>
  <run_depend>tf</run_depend>
  <run_depend>tf2</run_depend>
  <run_depend>visualization_msgs</run_depend>
  <run_depend>interactive_markers</run_depend>
  <run_depend>geometry_msgs</run_depend>
  <run_depend>laser_geometry</run_depend>
  <run_depend>nodelet</run_depend>
  <run_depend>pcl_conversions</run_depend>
  <run_depend>ar_track_alvar_msgs</run_depend>

  <!-- Dependencies needed only for running tests. -->
  <!-- <test_depend>roscpp</test_depend> -->
  <!-- <test_depend>tf</test_depend> -->
  <!-- <test_depend>tf2</test_depend> -->
  <!-- <test_depend>visualization_msgs</test_depend> -->
  <!-- <test_depend>interactive_markers</test_depend> -->
  <!-- <test_depend>geometry_msgs</test_depend> -->
  <!-- <test_depend>csm</test_depend> -->
  <!-- <test_depend>laser_geometry</test_depend> -->
  <!-- <test_depend>nodelet</test_depend> -->

<export>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
    <cpp lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lomnimapper_ros" cflags="-I${prefix}/include -I${prefix}/cfg/cpp"/>
</export>

</package>
