/* Auto-generated by genmsg_cpp for file /home/atrevor/github/omnimapper/ros/omnimapper_ros/srv/VisualizeFullCloud.srv */
#ifndef OMNIMAPPER_ROS_SERVICE_VISUALIZEFULLCLOUD_H
#define OMNIMAPPER_ROS_SERVICE_VISUALIZEFULLCLOUD_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace omnimapper_ros
{
template <class ContainerAllocator>
struct VisualizeFullCloudRequest_ {
  typedef VisualizeFullCloudRequest_<ContainerAllocator> Type;

  VisualizeFullCloudRequest_()
  : voxel_grid(false)
  {
  }

  VisualizeFullCloudRequest_(const ContainerAllocator& _alloc)
  : voxel_grid(false)
  {
  }

  typedef uint8_t _voxel_grid_type;
  uint8_t voxel_grid;


  typedef boost::shared_ptr< ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct VisualizeFullCloudRequest
typedef  ::omnimapper_ros::VisualizeFullCloudRequest_<std::allocator<void> > VisualizeFullCloudRequest;

typedef boost::shared_ptr< ::omnimapper_ros::VisualizeFullCloudRequest> VisualizeFullCloudRequestPtr;
typedef boost::shared_ptr< ::omnimapper_ros::VisualizeFullCloudRequest const> VisualizeFullCloudRequestConstPtr;


template <class ContainerAllocator>
struct VisualizeFullCloudResponse_ {
  typedef VisualizeFullCloudResponse_<ContainerAllocator> Type;

  VisualizeFullCloudResponse_()
  : done(false)
  {
  }

  VisualizeFullCloudResponse_(const ContainerAllocator& _alloc)
  : done(false)
  {
  }

  typedef uint8_t _done_type;
  uint8_t done;


  typedef boost::shared_ptr< ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct VisualizeFullCloudResponse
typedef  ::omnimapper_ros::VisualizeFullCloudResponse_<std::allocator<void> > VisualizeFullCloudResponse;

typedef boost::shared_ptr< ::omnimapper_ros::VisualizeFullCloudResponse> VisualizeFullCloudResponsePtr;
typedef boost::shared_ptr< ::omnimapper_ros::VisualizeFullCloudResponse const> VisualizeFullCloudResponseConstPtr;

struct VisualizeFullCloud
{

typedef VisualizeFullCloudRequest Request;
typedef VisualizeFullCloudResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct VisualizeFullCloud
} // namespace omnimapper_ros

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cb1e2f3f75addd1a11587a963289c595";
  }

  static const char* value(const  ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xcb1e2f3f75addd1aULL;
  static const uint64_t static_value2 = 0x11587a963289c595ULL;
};

template<class ContainerAllocator>
struct DataType< ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "omnimapper_ros/VisualizeFullCloudRequest";
  }

  static const char* value(const  ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool voxel_grid\n\
\n\
";
  }

  static const char* value(const  ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "89bb254424e4cffedbf494e7b0ddbfea";
  }

  static const char* value(const  ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x89bb254424e4cffeULL;
  static const uint64_t static_value2 = 0xdbf494e7b0ddbfeaULL;
};

template<class ContainerAllocator>
struct DataType< ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "omnimapper_ros/VisualizeFullCloudResponse";
  }

  static const char* value(const  ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool done\n\
\n\
";
  }

  static const char* value(const  ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.voxel_grid);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct VisualizeFullCloudRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.done);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct VisualizeFullCloudResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<omnimapper_ros::VisualizeFullCloud> {
  static const char* value() 
  {
    return "dc2a84a70ac59299e9bcb4286f3b5ee7";
  }

  static const char* value(const omnimapper_ros::VisualizeFullCloud&) { return value(); } 
};

template<>
struct DataType<omnimapper_ros::VisualizeFullCloud> {
  static const char* value() 
  {
    return "omnimapper_ros/VisualizeFullCloud";
  }

  static const char* value(const omnimapper_ros::VisualizeFullCloud&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dc2a84a70ac59299e9bcb4286f3b5ee7";
  }

  static const char* value(const omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "omnimapper_ros/VisualizeFullCloud";
  }

  static const char* value(const omnimapper_ros::VisualizeFullCloudRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dc2a84a70ac59299e9bcb4286f3b5ee7";
  }

  static const char* value(const omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "omnimapper_ros/VisualizeFullCloud";
  }

  static const char* value(const omnimapper_ros::VisualizeFullCloudResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // OMNIMAPPER_ROS_SERVICE_VISUALIZEFULLCLOUD_H

