/* Auto-generated by genmsg_cpp for file /home/siddharth/Research/projects/omnimapper/ros/omnimapper_ros/srv/OutputMapTSDF.srv */
#ifndef OMNIMAPPER_ROS_SERVICE_OUTPUTMAPTSDF_H
#define OMNIMAPPER_ROS_SERVICE_OUTPUTMAPTSDF_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace omnimapper_ros
{
template <class ContainerAllocator>
struct OutputMapTSDFRequest_ {
  typedef OutputMapTSDFRequest_<ContainerAllocator> Type;

  OutputMapTSDFRequest_()
  : grid_size(0.0)
  , resolution(0)
  {
  }

  OutputMapTSDFRequest_(const ContainerAllocator& _alloc)
  : grid_size(0.0)
  , resolution(0)
  {
  }

  typedef float _grid_size_type;
  float grid_size;

  typedef int32_t _resolution_type;
  int32_t resolution;


  typedef boost::shared_ptr< ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct OutputMapTSDFRequest
typedef  ::omnimapper_ros::OutputMapTSDFRequest_<std::allocator<void> > OutputMapTSDFRequest;

typedef boost::shared_ptr< ::omnimapper_ros::OutputMapTSDFRequest> OutputMapTSDFRequestPtr;
typedef boost::shared_ptr< ::omnimapper_ros::OutputMapTSDFRequest const> OutputMapTSDFRequestConstPtr;



template <class ContainerAllocator>
struct OutputMapTSDFResponse_ {
  typedef OutputMapTSDFResponse_<ContainerAllocator> Type;

  OutputMapTSDFResponse_()
  : done(false)
  {
  }

  OutputMapTSDFResponse_(const ContainerAllocator& _alloc)
  : done(false)
  {
  }

  typedef uint8_t _done_type;
  uint8_t done;


  typedef boost::shared_ptr< ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct OutputMapTSDFResponse
typedef  ::omnimapper_ros::OutputMapTSDFResponse_<std::allocator<void> > OutputMapTSDFResponse;

typedef boost::shared_ptr< ::omnimapper_ros::OutputMapTSDFResponse> OutputMapTSDFResponsePtr;
typedef boost::shared_ptr< ::omnimapper_ros::OutputMapTSDFResponse const> OutputMapTSDFResponseConstPtr;


struct OutputMapTSDF
{

typedef OutputMapTSDFRequest Request;
typedef OutputMapTSDFResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct OutputMapTSDF
} // namespace omnimapper_ros

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1b91828de43dd5da7a4fbc01af025f33";
  }

  static const char* value(const  ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1b91828de43dd5daULL;
  static const uint64_t static_value2 = 0x7a4fbc01af025f33ULL;
};

template<class ContainerAllocator>
struct DataType< ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "omnimapper_ros/OutputMapTSDFRequest";
  }

  static const char* value(const  ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 grid_size\n\
int32 resolution\n\
\n\
";
  }

  static const char* value(const  ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "89bb254424e4cffedbf494e7b0ddbfea";
  }

  static const char* value(const  ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x89bb254424e4cffeULL;
  static const uint64_t static_value2 = 0xdbf494e7b0ddbfeaULL;
};

template<class ContainerAllocator>
struct DataType< ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "omnimapper_ros/OutputMapTSDFResponse";
  }

  static const char* value(const  ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool done\n\
\n\
\n\
";
  }

  static const char* value(const  ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.grid_size);
    stream.next(m.resolution);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct OutputMapTSDFRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.done);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct OutputMapTSDFResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<omnimapper_ros::OutputMapTSDF> {
  static const char* value() 
  {
    return "64851ffcb00848c1778951a6fc353519";
  }

  static const char* value(const omnimapper_ros::OutputMapTSDF&) { return value(); } 
};

template<>
struct DataType<omnimapper_ros::OutputMapTSDF> {
  static const char* value() 
  {
    return "omnimapper_ros/OutputMapTSDF";
  }

  static const char* value(const omnimapper_ros::OutputMapTSDF&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "64851ffcb00848c1778951a6fc353519";
  }

  static const char* value(const omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "omnimapper_ros/OutputMapTSDF";
  }

  static const char* value(const omnimapper_ros::OutputMapTSDFRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "64851ffcb00848c1778951a6fc353519";
  }

  static const char* value(const omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "omnimapper_ros/OutputMapTSDF";
  }

  static const char* value(const omnimapper_ros::OutputMapTSDFResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // OMNIMAPPER_ROS_SERVICE_OUTPUTMAPTSDF_H

